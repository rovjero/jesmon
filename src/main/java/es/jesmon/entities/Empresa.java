package es.jesmon.entities;
// Generated 29-ene-2018 22:17:55 by Hibernate Tools 5.2.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;


/**
 * Empresa generated by hbm2java
 */
@Entity
@Table(name = "empresa", catalog = "jesmon")
@DynamicUpdate(value=true)
@DynamicInsert(value=true)

public class Empresa implements java.io.Serializable {

	private static final long serialVersionUID = 6235474752239488956L;
	private Integer idEmpresa;
	private Responsable responsable;
	private Sede sede;
	private String nif;
	private String telefono;
	private String denominacion;
	private String email;
	private String iban1;
	private String iban2;
	private String iban3;
	private String iban4;
	private String iban5;
	private Set<Responsable> responsables = new HashSet<Responsable>(0);
	private Set<Sede> sedes = new HashSet<Sede>(0);
	private Set<ContratoSistemaSeguridad> contratosSistemaSeguridad = new HashSet<ContratoSistemaSeguridad>(0);
	private Set<ContratoIncencidios> contratosIncencidios = new HashSet<ContratoIncencidios>(0);

	public Empresa() {
	}

	public Empresa(Integer idEmpresa) {
		this.idEmpresa = idEmpresa;
	}

	public Empresa(Responsable responsable, Sede sede, String nif, String denominacion, String email,
			Set<Responsable> responsables, Set<Sede> sedes) {
		this.responsable = responsable;
		this.sede = sede;
		this.nif = nif;
		this.denominacion = denominacion;
		this.email = email;
		this.responsables = responsables;
		this.sedes = sedes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_empresa", unique = true, nullable = false)
	public Integer getIdEmpresa() {
		return this.idEmpresa;
	}

	public void setIdEmpresa(Integer idEmpresa) {
		this.idEmpresa = idEmpresa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_persona_contacto")
	public Responsable getResponsable() {
		return this.responsable;
	}

	public void setResponsable(Responsable responsable) {
		this.responsable = responsable;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_sede_principal")
	public Sede getSede() {
		return this.sede;
	}

	public void setSede(Sede sede) {
		this.sede = sede;
	}

	@Column(name = "NIF", length = 9)
	public String getNif() {
		return this.nif;
	}

	public void setNif(String nif) {
		this.nif = nif;
	}

	@Column(name = "denominacion", nullable = false, length = 500)
	public String getDenominacion() {
		return this.denominacion;
	}

	public void setDenominacion(String denominacion) {
		this.denominacion = denominacion;
	}

	@Column(name = "email", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<Responsable> getResponsables() {
		return this.responsables;
	}

	public void setResponsables(Set<Responsable> responsables) {
		this.responsables = responsables;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<Sede> getSedes() {
		return this.sedes;
	}

	public void setSedes(Set<Sede> sedes) {
		this.sedes = sedes;
	}
	
	@Transient
	public List<Sede> getListaSedes (){
		List<Sede> listaSedes = new ArrayList<Sede>(sedes);
		listaSedes.sort(Comparator.comparing(Sede::getDenominacion).reversed());
		return listaSedes;
	}
	
	public boolean equals (Object o) {
		if(o == null || !o.getClass().equals(Empresa.class))
			return false;
		Empresa empresa = (Empresa)o;
		return idEmpresa.equals(empresa.getIdEmpresa());
	}

	@Column(name = "telefono", length = 9)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}
	
	@Column(name = "iban1", length = 4)
	public String getIban1() {
		return this.iban1;
	}

	public void setIban1(String iban1) {
		this.iban1 = iban1;
	}

	@Column(name = "iban2", length = 4)
	public String getIban2() {
		return this.iban2;
	}

	public void setIban2(String iban2) {
		this.iban2 = iban2;
	}

	@Column(name = "iban3", length = 4)
	public String getIban3() {
		return this.iban3;
	}

	public void setIban3(String iban3) {
		this.iban3 = iban3;
	}

	@Column(name = "iban4", length = 4)
	public String getIban4() {
		return this.iban4;
	}

	public void setIban4(String iban4) {
		this.iban4 = iban4;
	}

	@Column(name = "iban5", length = 5)
	public String getIban5() {
		return this.iban5;
	}

	public void setIban5(String iban5) {
		this.iban5 = iban5;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<ContratoSistemaSeguridad> getContratosSistemaSeguridad() {
		return contratosSistemaSeguridad;
	}

	public void setContratosSistemaSeguridad(Set<ContratoSistemaSeguridad> contratosSistemaSeguridad) {
		this.contratosSistemaSeguridad = contratosSistemaSeguridad;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empresa")
	public Set<ContratoIncencidios> getContratosIncencidios() {
		return contratosIncencidios;
	}

	public void setContratosIncencidios(Set<ContratoIncencidios> contratosIncencidios) {
		this.contratosIncencidios = contratosIncencidios;
	}

}
