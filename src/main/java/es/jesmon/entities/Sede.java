package es.jesmon.entities;
// Generated 29-ene-2018 22:17:55 by Hibernate Tools 5.2.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Sede generated by hbm2java
 */
@Entity
@Table(name = "sede", catalog = "jesmon")
public class Sede implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6925947292198127086L;
	private Integer idSede;
	private Direccion direccion;
	private Empresa empresa;
	private String denominacion;
	private String telefono;
	private Set<Responsable> responsables = new HashSet<Responsable>(0);
	private Set<Incidencia> incidencias = new HashSet<Incidencia>(0);
	private Set<Tramitador> tramitadors = new HashSet<Tramitador>(0);
	private Set<Empresa> empresas = new HashSet<Empresa>(0);

	public Sede() {
	}

	public Sede(Integer idSede) {
		this.idSede = idSede;
	}

	public Sede(Direccion direccion, Empresa empresa, String denominacion, String telefono,
			Set<Responsable> responsables, Set<Incidencia> incidencias, Set<Tramitador> tramitadors,
			Set<Empresa> empresas) {
		this.direccion = direccion;
		this.empresa = empresa;
		this.denominacion = denominacion;
		this.telefono = telefono;
		this.responsables = responsables;
		this.incidencias = incidencias;
		this.tramitadors = tramitadors;
		this.empresas = empresas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_sede", unique = true, nullable = false)
	public Integer getIdSede() {
		return this.idSede;
	}

	public void setIdSede(Integer idSede) {
		this.idSede = idSede;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_direccion")
	public Direccion getDireccion() {
		return this.direccion;
	}

	public void setDireccion(Direccion direccion) {
		this.direccion = direccion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_empresa")
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	@Column(name = "denominacion", nullable = false, length = 150)
	public String getDenominacion() {
		return this.denominacion;
	}

	public void setDenominacion(String denominacion) {
		this.denominacion = denominacion;
	}

	@Column(name = "telefono", length = 9)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "sedes")
	public Set<Responsable> getResponsables() {
		return this.responsables;
	}

	public void setResponsables(Set<Responsable> responsables) {
		this.responsables = responsables;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sede")
	public Set<Incidencia> getIncidencias() {
		return this.incidencias;
	}

	public void setIncidencias(Set<Incidencia> incidencias) {
		this.incidencias = incidencias;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "rel_tramitador_sede", catalog = "jesmon", joinColumns = {
			@JoinColumn(name = "id_sede", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_tramitador", nullable = false, updatable = false) })
	public Set<Tramitador> getTramitadors() {
		return this.tramitadors;
	}

	public void setTramitadors(Set<Tramitador> tramitadors) {
		this.tramitadors = tramitadors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sede")
	public Set<Empresa> getEmpresas() {
		return this.empresas;
	}

	public void setEmpresas(Set<Empresa> empresas) {
		this.empresas = empresas;
	}

}
